- hosts: all
  connection: local
  become: yes
  gather_facts: True
  
  tasks:
  - name: include vars
    include_vars: /vagrant/ansible-playbook/versions.yml

  - debug: var=k8s_minor_ver

  ##########################################
  ## Containerd のインストール
  - name: Install the prerequisite packeage
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - nfs-common
      - libseccomp2
    when: container_engine == "containerd"

  - name: Add the br_netfilter module
    modprobe:
      name: br_netfilter
      state: present
    when: container_engine == "containerd"

  - name: Download Containerd
    get_url:
      url: https://storage.googleapis.com/cri-containerd-release/cri-containerd-{{ containerd_version }}.linux-amd64.tar.gz
      dest: /tmp/cri-containerd-{{ containerd_version }}.linux-amd64.tar.gz
      mode: '0644'
    when: container_engine == "containerd"
    
  - name: Deploy Containerd
    unarchive:
      src: /tmp/cri-containerd-{{ containerd_version }}.linux-amd64.tar.gz
      dest: /
    when: container_engine == "containerd"


  ##########################################
  ## Docker CE のインストール
  #
  - name: Add Docker GPG key
    apt_key: url=https://download.docker.com/linux/ubuntu/gpg
    when: container_engine == "docker-ce"

  - name: Add Docker APT repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
    when: container_engine == "docker-ce"
    
  - name: Install a list of packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - nfs-common
      - docker-ce{{ docker_version }}
    when: container_engine == "docker-ce"


  - name: usermod -aG docker vagrant
    user:
      name: vagrant
      groups: docker
    when: container_engine == "docker-ce"
    
  ##########################################



  ## 共通設定 カーネル設定変更
  - name: Set sysctl bridge
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: "1"
      sysctl_set: yes
      sysctl_file: /etc/sysctl.conf      
      state: present
      reload: yes

  - name: Set sysctl ip_forward
    sysctl:
      name: net.ipv4.ip_forward
      value: "1"
      sysctl_set: yes
      sysctl_file: /etc/sysctl.conf      
      state: present
      reload: yes



  ##-------------------------------------------
  - name: Containerd start by systemd
    systemd:
      state: started
      daemon_reload: yes
      name: containerd
    when: container_engine == "containerd"



  ## GlusterFS のインストール
  #
  - name: Add GlusterFS Repository
    apt_repository:
      repo: ppa:gluster/glusterfs-7

  - name: Install GlusterFS client
    apt:
      name: glusterfs-client
      state: present
      update_cache: yes


  ## Kubernetes のインストール
  #
  - name: add Kubernetes apt-key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: add Kubernetes' APT repository
    apt_repository:
     repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
     state: present
     filename: 'kubernetes'

  - name: Install kubectl
    apt:
      name: kubectl{{ k8s_version }}
      state: present
      update_cache: yes

  - name: Install kubelet
    apt:
      name: kubelet{{ k8s_version }}
      state: present
      update_cache: yes

  - name: Install kubeadm
    apt:
      name: kubeadm{{ k8s_version }}
      state: present
      update_cache: yes

  ##-------------------------------------------
  # Containerd のコンフィグ・ファイルをコピー
  - name: Copy containerd configfile
    copy:
      src: containerd_conf
      dest: /etc/systemd/system/kubelet.service.d/0-containerd.conf
      mode: '0644'
    when: container_engine == "containerd"


  ## k8sのVagrant対応に、ノードのIPアドレスを設定 
  #
  #- name: Set value to local vars
  #  include_vars: /vagrant/ansible-playbook/versions.yml


  ## HostOnly Interface の IPアドレス取得
  #
  - name: get IP-addr for hostonly interface
    command: ifconfig enp0s8
    register: ip
  - debug: var=ip.stdout_lines[1].split(':')[1].split(' ')[0]



  ## 10-kubeadmin.conf に --node-ipを追加
  #
  - name: Change 10-kubeadm.conf
    replace:
      dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      regexp: 'KUBELET_EXTRA_ARGS$'
      replace: KUBELET_EXTRA_ARGS --node-ip={{ ip.stdout_lines[1].split(':')[1].split(' ')[0] }} --cluster-dns=10.32.0.10


  ## 変更を反映
  #
  - name: daemon-reload and restart kubelet
    systemd:
      state: restarted
      daemon_reload: yes
      name: kubelet

